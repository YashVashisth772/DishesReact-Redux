[{"C:\\React 2021\\Coursera\\coursera-proj\\src\\index.js":"1","C:\\React 2021\\Coursera\\coursera-proj\\src\\reportWebVitals.js":"2","C:\\React 2021\\Coursera\\coursera-proj\\src\\App.js":"3","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\MenuComponent.js":"4","C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\dishes.js":"5","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\DishdetailComponent .js":"6","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\MainComponent.js":"7","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\FooterComponent.js":"8","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\HeaderComponent.js":"9","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\HomeComponent.js":"10","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\ContactComponent.js":"11","C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\comments.js":"12","C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\leaders.js":"13","C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\promotions.js":"14","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\AboutComponent.js":"15","C:\\React 2021\\Coursera\\coursera-proj\\src\\redux\\configureStore.js":"16","C:\\React 2021\\Coursera\\coursera-proj\\src\\redux\\reducer.js":"17","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\CommentFormComponent.js":"18"},{"size":639,"mtime":1612698013919,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612015347831,"results":"21","hashOfConfig":"20"},{"size":546,"mtime":1612961231644,"results":"22","hashOfConfig":"20"},{"size":1535,"mtime":1612752938664,"results":"23","hashOfConfig":"20"},{"size":1490,"mtime":1612718016805,"results":"24","hashOfConfig":"20"},{"size":5159,"mtime":1613274342491,"results":"25","hashOfConfig":"20"},{"size":2494,"mtime":1612964023746,"results":"26","hashOfConfig":"20"},{"size":2637,"mtime":1612707489630,"results":"27","hashOfConfig":"20"},{"size":5081,"mtime":1613015564052,"results":"28","hashOfConfig":"20"},{"size":1112,"mtime":1612719249516,"results":"29","hashOfConfig":"20"},{"size":23416,"mtime":1612973645803,"results":"30","hashOfConfig":"20"},{"size":4279,"mtime":1612718051887,"results":"31","hashOfConfig":"20"},{"size":2382,"mtime":1612718072657,"results":"32","hashOfConfig":"20"},{"size":445,"mtime":1612718060692,"results":"33","hashOfConfig":"20"},{"size":4324,"mtime":1612768766932,"results":"34","hashOfConfig":"20"},{"size":262,"mtime":1612961245461,"results":"35","hashOfConfig":"20"},{"size":407,"mtime":1612961261227,"results":"36","hashOfConfig":"20"},{"size":4299,"mtime":1613276948452,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"275rk8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React 2021\\Coursera\\coursera-proj\\src\\index.js",[],["77","78"],"C:\\React 2021\\Coursera\\coursera-proj\\src\\reportWebVitals.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\App.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\MenuComponent.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\dishes.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\DishdetailComponent .js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\MainComponent.js",["79","80"],"import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent ';\r\nimport { DISHES } from '../shared/dishes';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect ,withRouter } from 'react-router-dom';\r\nimport Home from './HomeComponent';\r\nimport { connect } from 'react-redux';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { LEADERS } from '../shared/leaders';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n//   onDishSelect(dishId) {\r\n//     this.setState({ selectedDish: dishId});\r\n//   }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n\r\n              <Route exact path='/contactus' component={Contact} />\r\n\r\n              <Route path='/aboutus' component={() => <About leaders={this.props.leaders} /> }/>\r\n\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        {/* <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} /> */}\r\n        {/* <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} /> */}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));","C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\FooterComponent.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\HeaderComponent.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\HomeComponent.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\ContactComponent.js",["81","82","83","84","85","86","87","88"],"import React , {Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n    \r\n    \r\n    render(){\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Location Information</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                                121, Clear Water Bay Road<br />\r\n                Clear Water Bay, Kowloon<br />\r\n                HONG KONG<br />\r\n                                <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                            <h5>Map of our Location</h5>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                            <div className=\"btn-group\" role=\"group\">\r\n                                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                                <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n\r\n// Without React-Redux-Form\r\n\r\n\r\n// import React , {Component } from 'react';\r\n// import { Breadcrumb, BreadcrumbItem ,Button, Form, FormGroup, Label, Input, Col ,Row, FormFeedback} from 'reactstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// class Contact extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: '',\r\n//             agree: false,\r\n//             contactType: 'Tel.',\r\n//             message: '',\r\n//             touched: {\r\n//                 firstname: false,\r\n//                 lastname: false,\r\n//                 telnum: false,\r\n//                 email: false\r\n//             }\r\n            \r\n//         }\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//         this.handleBlur = this.handleBlur.bind(this);\r\n//         // this.validate = this.validate.bind(this);\r\n\r\n//     }\r\n\r\n//     handleInputChange(event) {\r\n//         const target = event.target;\r\n//         const value = target.type === 'checkbox' ? target.checked : target.value;\r\n//         const name = target.name;\r\n    \r\n//         this.setState({\r\n//           [name]: value\r\n//         });\r\n//     }\r\n\r\n//     handleSubmit(event) {\r\n//         console.log('Current State is: ' + JSON.stringify(this.state));\r\n//         //  alert('Current State is: ' + JSON.stringify(this.state));\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     handleBlur = (field) => (evt) => {\r\n//         this.setState({\r\n//             touched: { ...this.state.touched, [field]: true }\r\n//         });\r\n//     }\r\n\r\n//     validate(firstname, lastname, telnum, email) {\r\n//         const errors = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: ''\r\n//         };\r\n\r\n//         if (this.state.touched.firstname && firstname.length < 3)\r\n//             errors.firstname = 'First Name should be >= 3 characters';\r\n//         else if (this.state.touched.firstname && firstname.length > 10)\r\n//             errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n//         if (this.state.touched.lastname && lastname.length < 3)\r\n//             errors.lastname = 'Last Name should be >= 3 characters';\r\n//         else if (this.state.touched.lastname && lastname.length > 10)\r\n//             errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n//         const reg = /^\\d+$/;\r\n//         if (this.state.touched.telnum && !reg.test(telnum))\r\n//             errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n//         if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n//             errors.email = 'Email should contain a @';\r\n\r\n//         return errors;\r\n//     }\r\n    \r\n//     render(){\r\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n//         return(\r\n//             <React.Fragment>\r\n//                 <div className=\"container\" >\r\n//                     <div className=\"row\">\r\n//                         <Breadcrumb>\r\n//                             <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n//                             <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n//                         </Breadcrumb>\r\n//                         <div className=\"col-12\">\r\n//                             <h3>Contact Us</h3>\r\n//                             <hr />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"row row-content\">\r\n//                         <div className=\"col-12\">\r\n//                             <h3>Location Information</h3>\r\n//                         </div>\r\n//                         <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n//                             <h5>Our Address</h5>\r\n//                             <address>\r\n//                                 121, Clear Water Bay Road<br />\r\n//                 Clear Water Bay, Kowloon<br />\r\n//                 HONG KONG<br />\r\n//                                 <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n//                                 <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n//                                 <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n//                             </address>\r\n//                         </div>\r\n//                         <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n//                             <h5>Map of our Location</h5>\r\n//                         </div>\r\n//                         <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n//                             <div className=\"btn-group\" role=\"group\">\r\n//                                 <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n//                                 <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n//                                 <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"row row-content\">\r\n//                    <div className=\"col-12\">\r\n//                       <h3>Send us your Feedback</h3>\r\n//                    </div>\r\n//                     <div className=\"col-12 col-md-9\">\r\n//                         <Form onSubmit={this.handleSubmit}>\r\n//                                 <FormGroup row>\r\n//                                     <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//                                     <Col md={10}>\r\n//                                         <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n//                                             placeholder=\"First Name\"\r\n//                                             value={this.state.firstname}\r\n//                                             valid={errors.firstname === ''}\r\n//                                             invalid={errors.firstname !== ''}\r\n//                                             onBlur={this.handleBlur('firstname')}\r\n//                                             onChange={this.handleInputChange} />\r\n//                                         <FormFeedback>{errors.firstname}</FormFeedback>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup row>\r\n//                                     <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//                                     <Col md={10}>\r\n//                                         <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n//                                             placeholder=\"Last Name\"\r\n//                                             value={this.state.lastname}\r\n//                                             valid={errors.lastname === ''}\r\n//                                             invalid={errors.lastname !== ''}\r\n//                                             onBlur={this.handleBlur('lastname')}\r\n//                                             onChange={this.handleInputChange} />\r\n//                                         <FormFeedback>{errors.lastname}</FormFeedback>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup row>\r\n//                                     <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//                                     <Col md={10}>\r\n//                                         <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n//                                             placeholder=\"Tel. Number\"\r\n//                                             value={this.state.telnum}\r\n//                                             valid={errors.telnum === ''}\r\n//                                             invalid={errors.telnum !== ''}\r\n//                                             onBlur={this.handleBlur('telnum')}\r\n//                                             onChange={this.handleInputChange} />\r\n//                                         <FormFeedback>{errors.telnum}</FormFeedback>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup row>\r\n//                                     <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//                                     <Col md={10}>\r\n//                                         <Input type=\"email\" id=\"email\" name=\"email\"\r\n//                                             placeholder=\"Email\"\r\n//                                             value={this.state.email}\r\n//                                             valid={errors.email === ''}\r\n//                                             invalid={errors.email !== ''}\r\n//                                             onBlur={this.handleBlur('email')}\r\n//                                             onChange={this.handleInputChange} />\r\n//                                         <FormFeedback>{errors.email}</FormFeedback>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup row>\r\n//                                     <Col md={{ size: 6, offset: 2 }}>\r\n//                                         <FormGroup check>\r\n//                                             <Label check>\r\n//                                                 <Input type=\"checkbox\"\r\n//                                                     name=\"agree\"\r\n//                                                     checked={this.state.agree}\r\n//                                                     onChange={this.handleInputChange} /> {' '}\r\n//                                                 <strong>May we contact you?</strong>\r\n//                                             </Label>\r\n//                                         </FormGroup>\r\n//                                     </Col>\r\n//                                     <Col md={{ size: 3, offset: 1 }}>\r\n//                                         <Input type=\"select\" name=\"contactType\"\r\n//                                             value={this.state.contactType}\r\n//                                             onChange={this.handleInputChange}>\r\n//                                             <option>Tel.</option>\r\n//                                             <option>Email</option>\r\n//                                         </Input>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup row>\r\n//                                     <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//                                     <Col md={10}>\r\n//                                         <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n//                                             rows=\"12\"\r\n//                                             value={this.state.message}\r\n//                                             onChange={this.handleInputChange}></Input>\r\n//                                     </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{size: 10, offset: 2}}>\r\n//                                     <Button type=\"submit\" color=\"primary\">\r\n//                                         Send Feedback\r\n//                                     </Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                         </Form>\r\n//                     </div>\r\n//                </div>\r\n//                 </div>\r\n//             </React.Fragment>\r\n//         )\r\n//     }    \r\n// }\r\n\r\n// export default Contact;","C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\comments.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\leaders.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\shared\\promotions.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\AboutComponent.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\redux\\configureStore.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\redux\\reducer.js",[],"C:\\React 2021\\Coursera\\coursera-proj\\src\\components\\CommentFormComponent.js",["89","90","91","92","93","94","95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":28,"column":3,"nodeType":"107","messageId":"108","endLine":30,"endColumn":4},{"ruleId":"109","severity":1,"message":"110","line":62,"column":33,"nodeType":"111","endLine":62,"endColumn":75},{"ruleId":"112","severity":1,"message":"113","line":76,"column":37,"nodeType":"111","endLine":82,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":98,"column":37,"nodeType":"111","endLine":104,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":120,"column":37,"nodeType":"111","endLine":126,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":143,"column":37,"nodeType":"111","endLine":149,"endColumn":44},{"ruleId":"112","severity":1,"message":"114","line":165,"column":45,"nodeType":"111","endLine":167,"endColumn":52},{"ruleId":"112","severity":1,"message":"115","line":173,"column":37,"nodeType":"111","endLine":174,"endColumn":66},{"ruleId":"112","severity":1,"message":"116","line":183,"column":37,"nodeType":"111","endLine":185,"endColumn":68},{"ruleId":"101","severity":1,"message":"117","line":3,"column":5,"nodeType":"103","messageId":"104","endLine":3,"endColumn":9},{"ruleId":"101","severity":1,"message":"118","line":3,"column":11,"nodeType":"103","messageId":"104","endLine":3,"endColumn":20},{"ruleId":"101","severity":1,"message":"119","line":3,"column":22,"nodeType":"103","messageId":"104","endLine":3,"endColumn":27},{"ruleId":"101","severity":1,"message":"120","line":9,"column":7,"nodeType":"103","messageId":"104","endLine":9,"endColumn":15},{"ruleId":"101","severity":1,"message":"121","line":10,"column":7,"nodeType":"103","messageId":"104","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"115","line":45,"column":33,"nodeType":"111","endLine":45,"endColumn":104},{"ruleId":"112","severity":1,"message":"113","line":57,"column":33,"nodeType":"111","endLine":63,"endColumn":35},{"ruleId":"112","severity":1,"message":"116","line":79,"column":33,"nodeType":"111","endLine":81,"endColumn":64},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'DISHES' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'isNumber' is assigned a value but never used.","'validEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]